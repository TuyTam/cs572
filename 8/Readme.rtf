{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Import json file to MongoCompass\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \CocoaLigature0 mongoimport --host localhost:27017 --db homework08 --collection Restaurants --file /MUM/MWA/Homeworks/cs572/8/restaurants.json\
\
Questions:\
1. db.Restaurants.find(\{\})\
2. db.Restaurants.find(\{\}).projection(\{restaurant_id:1, name:1, district:1, cuisine:1\})\
3. db.Restaurants.find(\{\}).projection(\{restaurant_id:1, name:1, district:1, cuisine:1, _id:0\})\
4. db.Restaurants.find(\{\}).projection(\{restaurant_id:1, name:1, district:1, zipcode:1, _id:0\})\
5. db.Restaurants.find(\{district: 'Bronx'\})\
6. db.Restaurants.find(\{district: 'Bronx\'92\}).limit(5)\
7. db.Restaurants.find(\{district: 'Bronx\'92\}).skip(5).limit(5)\
8. db.Restaurants.find(\{'address.coord': \{ $elemMatch:\{ $lt: -95.754168 \}\}\})\
9. db.Restaurants.find(\{cuisine: \{ $nin:["American"]\}, grades: \{ $elemMatch: \{score: \{$gt:70\}\}\},"address.coord": \{$elemMatch: \{$lt : -65.754168\}\}\})\
10. db.Restaurants.find(\{name:\{$regex: "^Wil"\}\},\{restaurant_id:1, district:1, cuisine:1, name:1\})\
11. db.Restaurants.find(\{name:\{$regex: "ces$"\}\},\{restaurant_id:1, district:1, cuisine:1, name:1\})\
12. db.Restaurants.find(\{name:\{$regex: "Reg"\}\},\{restaurant_id:1, district:1, cuisine:1, name:1\})\
13. db.Restaurants.find(\{district:"Bronx",cuisine: \{ $in:["American","Chinese"]\}\})\
14. db.Restaurants.find(\{district:\{ $in: ["Staten Island","Queens", "Bronx", "Brooklyn"]\}\},\{restaurant_id:1, district:1, cuisine:1, name:1, _id:0\})\
15. db.Restaurants.find(\{district:\{ $nin: ["Staten Island","Queens", "Bronx", "Brooklyn"]\}\},\{restaurant_id:1, district:1, cuisine:1, name:1, _id:0\})\
16. db.Restaurants.find(\{grades:\{ $elemMatch: \{score: \{$gt: 10\}\}\}\},\{restaurant_id:1, district:1, cuisine:1, name:1, _id:0\})\
17. db.Restaurants.find(\{"address.coord.1": \{ $gt:42, $lte:52\}\},\{restaurant_id:1, "address.street":1, "address.coord":1, name:1, _id:0\})\
18. db.Restaurants.find(\{\},\{name:1\}).sort(\{name:1\})\
19. db.Restaurants.find(\{\},\{name:1\}).sort(\{name:-1\})\
20. db.Restaurants.find(\{\},\{name:1, cuisine:1, district:1\}).sort(\{cuisine:1, district:-1\})\
21. db.Restaurants.find(\{"address.coord":\{$type:["double"]\}\},\{name:1, cuisine:1, district:1\}).sort(\{cuisine:1, district:-1\})\
22. db.Restaurants.find(\{name:\{$regex:"^Mad"\}\},\{name:1, cuisine:1, district:1\}).sort(\{cuisine:1, district:-1\})\
db.Restaurants.createIndex({location: '2d'})
db.collection.find({location: { $near: [currentLong, currentLat]}}).limit(10)
}